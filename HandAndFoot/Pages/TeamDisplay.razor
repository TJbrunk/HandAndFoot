<div class="container-fluid bg-light"
     style="min-height: 400px">
    <div class="row">
        <div class="col">
            <div class="row font-weight-bold">
                <p class="col">@Team.Name</p>
                <p class="col float-right">@Team.TotalScore</p>
            </div>
            @for (int i = 0; i < Team.RoundScores.Count(); i++)
            {
                <div class="row">
                    <div class="col-6">@(i+1):</div>
                    <div class="col-6">@Team.RoundScores[i].CalculateTotal()</div>
                </div>
            }

            <div class="row justify-content-">
                <button class="col-lg-4 col-sm-8 btn btn-sm btn-primary mx-3 my-1" @onclick="OpenScoreClick">Score</button>
                <button class="col-lg-4 col-sm-8 btn btn-sm btn-primary mx-3 my-1" @onclick="DrawBonusClick">Draw Bonus</button>
            </div>
        </div>
    </div>
</div>
@code {

    [Parameter]
    public Team Team { get; set; }

    [Parameter]
    public EventCallback<Team> OpenScoreModal { get; set; }

    [Parameter]
    public EventCallback<Team> CardDrawBonus { get; set; }

    private void OpenScoreClick()
    {
        this.OpenScoreModal.InvokeAsync(this.Team);
    }

    private void DrawBonusClick()
    {
        this.CardDrawBonus.InvokeAsync(this.Team);
    }
}
